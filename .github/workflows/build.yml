name: build

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Check Code Format
        run: cargo fmt --all -- --check

      - name: Code Lint
        run: cargo clippy --workspace --all-targets -- -D warnings

      - name: Test Types
        run: cargo test -p jsonrpc-types

      - name: Test Client
        run: |
          cargo test --manifest-path client/Cargo.toml --no-default-features --features 'http-async-std'
          cargo test --manifest-path client/Cargo.toml --no-default-features --features 'http-tokio'
          cargo test  --manifest-path client/Cargo.toml --no-default-features --features 'ws-async-std'
          cargo test --manifest-path client/Cargo.toml --no-default-features --features 'ws-tokio'

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Generate Code Coverage
        uses: actions-rs/tarpaulin@v0.1

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v1
