name: build

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build:
    name: Build
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Check Code Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Code Lint With `tokio` Runtime
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --default-features --features 'http-rt-tokio,ws-rt-tokio' --all-targets -- -D warnings

      - name: Code Lint With `async-std` Runtime
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --default-features --features 'http-rt-async-std,ws-rt-async-std' --all-targets -- -D warnings

      - name: Test With `tokio` Runtime
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --default-features --features 'http-rt-tokio,ws-rt-tokio'

      - name: Test With `async-std` Runtime
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --default-features --features 'http-rt-async-std,ws-rt-async-std'
